
package client;

import java.util.LinkedList;

/**
 *
 * @author oracle
 */
public class OracleDataBlocks extends javax.swing.JFrame {

    public DataBlock datablock;

    /** Creates new form Assigment2 */
    public Assigment2() {
        initComponents();

        datablock = new DataBlock();
        SuccessMessage.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jLabel1 = new javax.swing.JLabel();
        StudentIDTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        FirstNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        LastNameTextField = new javax.swing.JTextField();
        InsertButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        Deletebutton = new javax.swing.JButton();
        SuccessMessage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        ClearButton = new javax.swing.JButton();
        SelectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("StudentID");

        jLabel2.setText("Student First Name");

        jLabel3.setText("Student Last Name");

        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        Deletebutton.setText("Delete");
        Deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebuttonActionPerformed(evt);
            }
        });

        SuccessMessage.setForeground(new java.awt.Color(255, 51, 51));
        SuccessMessage.setText("jLabel4");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        ClearButton.setText("clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        SelectButton.setText("Select");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SuccessMessage)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(FirstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                        .addComponent(StudentIDTextField)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel3)
                                    .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(InsertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                    .addComponent(Deletebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(SelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(StudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(InsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Deletebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(SelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(SuccessMessage))
        );

        pack();
    }//GEN-END:initComponents
    
    public int StudentId;
    public String FirstName;
    public String LastName;
    public String MainQuery;


  

   

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        // TODO add your handling code here:
        try {

            boolean y;
            FirstName = FirstNameTextField.getText();
            LastName = LastNameTextField.getText();
            StudentId = Integer.parseInt(StudentIDTextField.getText());
            y = datablock.StudentIdExist(StudentId);
            if (y == false) {
                datablock.insert(StudentId, FirstName, LastName);
                String result;
                result = datablock.DisplayData();
                jTextArea1.setText(result);
            } else {
                SuccessMessage.setVisible(true);
                SuccessMessage.setText("Student Id already exists");
            }

        } catch (Exception ex) {
            SuccessMessage.setVisible(true);
            SuccessMessage.setText("Invalid student Id");

        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        // TODO add your handling code here:
        StudentIDTextField.setText(null);
        FirstNameTextField.setText(null);
        LastNameTextField.setText(null);

    }//GEN-LAST:event_ClearButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try {
            FirstName = FirstNameTextField.getText();
            LastName = LastNameTextField.getText();
            if (!StudentIDTextField.getText().isEmpty()) {
                if (!FirstNameTextField.getText().isEmpty() && LastName.length() != 0) {
                    StudentId = Integer.parseInt(StudentIDTextField.getText());
                    FirstName = FirstNameTextField.getText();
                    LastName = LastNameTextField.getText();
                    String ans = datablock.update(StudentId, FirstName, LastName);
                    SuccessMessage.setVisible(true);
                    SuccessMessage.setText(ans);
                    String result;
                    result = datablock.DisplayData();
                    jTextArea1.setText(result);
                } else {
                    SuccessMessage.setVisible(true);
                    SuccessMessage.setText("First Name Or last Name can not empty");
                }
            } else {
                SuccessMessage.setVisible(true);
                SuccessMessage.setText("Student Id can not be Empty");
            }
        } catch (Exception ex) {
            SuccessMessage.setVisible(true);
            SuccessMessage.setText("Exception------" + ex);
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        // TODO add your handling code here:
        // String[] Names= new String[3];
        LinkedList<String> Slected_Names = new LinkedList<>();
        String SelectionStatus = "Student Id exists";

        if (!StudentIDTextField.getText().isEmpty()) {

            Slected_Names = datablock.Select(Integer.parseInt(StudentIDTextField.getText()));
            if (Slected_Names.size() != 0 && Slected_Names.get(2) == SelectionStatus && Slected_Names.get(2) != null) {
                FirstNameTextField.setText(Slected_Names.get(0));
                LastNameTextField.setText(Slected_Names.get(1));
                String str = datablock.DisplaySelectQuery(Integer.parseInt(StudentIDTextField.getText()));
                jTextArea1.setText(str);
            } else {
                SuccessMessage.setVisible(true);
                SuccessMessage.setText("Student Id Does not exists");
            }
        } else {
            SuccessMessage.setVisible(true);
            SuccessMessage.setText("Student Id can not be Empty");
        }
        
    }//GEN-LAST:event_SelectButtonActionPerformed

    private void DeletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebuttonActionPerformed
        // TODO add your handling code here:

        String result;
        boolean DeleteStatus;
        if (!StudentIDTextField.getText().isEmpty()) {

            DeleteStatus = datablock.Delete(Integer.parseInt(StudentIDTextField.getText()));
            if (DeleteStatus == true) {
                result = datablock.DisplayData();
                jTextArea1.setText(result);
                SuccessMessage.setVisible(true);
                SuccessMessage.setText("Deleted Successfully");
            } else {
                SuccessMessage.setVisible(true);
                SuccessMessage.setText("Student Id does not exists");
            }
        } else {
            SuccessMessage.setVisible(true);
            SuccessMessage.setText("Student Id can not be Empty");
              
    }//GEN-LAST:event_DeletebuttonActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Assigment2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Assigment2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Assigment2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Assigment2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                               ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Assigment2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton Deletebutton;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JButton InsertButton;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JButton SelectButton;
    private javax.swing.JTextField StudentIDTextField;
    private javax.swing.JLabel SuccessMessage;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}

